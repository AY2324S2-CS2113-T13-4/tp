@startuml

skinparam classAttributeIconSize 0
skinparam CircledCharacterFontSize 0
skinparam CircledCharacterRadius 0

class SuperTracker
class FileManager
class Inventory
class Item
class CommandClass
class ItemStorage

FileManager <|--- ItemStorage
Inventory <.. ItemStorage
Item <.. ItemStorage
Item "*" <--* Inventory
ItemStorage <.. CommandClass
ItemStorage <. SuperTracker

class FileManager {
    {static}#DATA_PATH:String
    {static}#checkDataDirectory():void
    {static}#getNameQtyPriceStrings(item:Item):String[]
}

class ItemStorage {
    {static}+saveData():void
    {static}+loadData():void
    {static}-getItemData(item:Item):String
    {static}-parseItemData(data:String):Item
}

class SuperTracker {
    {static}-run():void
}

class CommandClass {
    +execute():void
}

class Inventory {
    {static}+getItems():List<Item>
    {static}+put(name:String, item:Item):void
}

class Item {
    -name:String
    -quantity:int
    -price:double
    -expiryDate:LocalDate
    +getName():String
}

note right of CommandClass
    CommandClass refers to the classes
    that implement the Command interface
endnote

@enduml