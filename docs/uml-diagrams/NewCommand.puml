@startuml
'https://plantuml.com/class-diagram
skinparam classAttributeIconSize 0
skinparam CircledCharacterFontSize 0
skinparam CircledCharacterRadius 0

abstract class Command
class Inventory
class Item
class NewCommand
class Parser
class Ui
class ItemStorage

Command <|. NewCommand
Item <... NewCommand
Ui <.. NewCommand
Inventory <.. NewCommand
NewCommand <.. Parser
ItemStorage <.. NewCommand
Inventory <.. ItemStorage

interface Command <<interface>> {
    +execute():void
    +isQuit():boolean
}

class NewCommand {
    -name:String
    -quantity:int
    -price:double
    -expiryDate:LocalDate
    +NewCommand()
    +execute():void
    +isQuit():boolean
}

class Item {
    +Item()
}

class Inventory {
    {static}+put(name:String, item:Item):void
}

class Ui {
    {static}+newCommandSuccess(item:Item):void
}

class Parser {
    {static}-parseNewCommand(input:String):NewCommand
}

class ItemStorage {
    {static}+saveData():void
}

note "Some parameters and methods \nomitted for brevity" as n1

@enduml

@startuml
hide footbox
participant "SuperTracker" as SuperTracker <<class>> #f5e3a9
participant ":NewCommand" as NewCommand #cbf7f4
participant "ItemStorage" as ItemStorage <<class>> #bcf7cf
participant "Inventory" as Inventory <<class>> #d5eac2
participant "Ui" as Ui <<class>> #e5c2ea
participant ":Item" as Item #fbffb2

SuperTracker -> NewCommand : execute()
activate NewCommand #cbf7f4

NewCommand -> Item ** : new Item(name:String, quantity:int, price:double, expiryDate:LocalDate)
activate Item #fbffb2
Item --> NewCommand : :Item
deactivate Item

NewCommand -> Inventory : put(name:String, item:Item)
activate Inventory #d5eac2
Inventory --> NewCommand
deactivate Inventory

NewCommand -> Ui : newCommandSuccess(item:Item)
activate Ui #e5c2ea
Ui --> NewCommand
deactivate Ui

NewCommand -> ItemStorage : saveData()
activate ItemStorage #bcf7cf
ItemStorage --> NewCommand
deactivate ItemStorage

NewCommand --> SuperTracker
deactivate NewCommand
@enduml