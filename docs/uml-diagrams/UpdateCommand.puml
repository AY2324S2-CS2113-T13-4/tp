@startuml
'https://plantuml.com/class-diagram
skinparam classAttributeIconSize 0
skinparam CircledCharacterFontSize 0
skinparam CircledCharacterRadius 0

interface Command
class Ui
class Inventory
class Item
class UpdateCommand
class Parser
class ItemStorage

UpdateCommand <.. Parser
Command <|. UpdateCommand
Ui <.. UpdateCommand
Inventory <.. UpdateCommand
Item <.. UpdateCommand
ItemStorage <.. UpdateCommand
Inventory <.. ItemStorage

interface Command <<interface>> {
    +execute():void
    +isQuit():boolean
}

class UpdateCommand {
    -name:String
    -newQuantity:int
    -newPrice:double
    -newExpiryDate:LocalDate
    +UpdateCommand()
    +execute():void
    +isQuit():boolean
}

class Item {
    +Item()
    +getName():String
    +getQuantity():int
    +getPrice():double
    +getExpiryDate():LocalDate
}

class Ui {
    {static}+updateCommandSuccess(item:Item):void
}

class Parser {
    {static}-parseUpdateCommand(input:String):UpdateCommand
}

class Inventory {
    {static}+get(name:String):Item
    {static}+put(name:String, item:Item):void
}

class ItemStorage {
    {static}+saveData():void
}

note "Some parameters and methods \nomitted for brevity" as n1

@enduml

@startuml
hide footbox
participant "SuperTracker" as SuperTracker <<class>> #f5e3a9
participant ":UpdateCommand" as UpdateCommand #cbf7f4
participant "ItemStorage" as ItemStorage <<class>> #bcf7cf
participant "Inventory" as Inventory <<class>> #d5eac2
participant "Ui" as Ui <<class>> #e5c2ea
participant "oldItem:Item" as oldItem #ffa1a1
participant ":Item" as Item #fbffb2

SuperTracker -> UpdateCommand : execute()
activate UpdateCommand #cbf7f4

UpdateCommand -> Inventory : get(name:String)
activate Inventory #d5eac2
Inventory --> UpdateCommand : oldItem:Item
deactivate Inventory

opt newQuantity == -1
    UpdateCommand -> oldItem: getQuantity()
    activate oldItem #ffa1a1
    oldItem --> UpdateCommand: oldItemQuantity:int
    deactivate oldItem
end

opt newPrice == -1
    UpdateCommand -> oldItem: getPrice()
    activate oldItem #ffa1a1
    oldItem --> UpdateCommand: oldItemPrice:double
    deactivate oldItem
end

opt newExpiryDate == "1-1-1"
    UpdateCommand -> oldItem: getExpiryDate()
    activate oldItem #ffa1a1
    oldItem --> UpdateCommand: oldExpiryDate:LocalDate
    deactivate oldItem
end

UpdateCommand -> oldItem: getName()
activate oldItem #ffa1a1
oldItem --> UpdateCommand: :String
deactivate oldItem

UpdateCommand -> Item ** : new Item(name:String, quantity:int, price:double, expiryDate:LocalDate)
activate Item #fbffb2
Item --> UpdateCommand : newItem:Item
deactivate Item

UpdateCommand -> Inventory : put(name:String, newItem:Item)
activate Inventory #d5eac2
Inventory --> UpdateCommand
deactivate Inventory

UpdateCommand -> Ui : updateCommandSuccess(item:Item)
activate Ui #e5c2ea
Ui --> UpdateCommand
deactivate Ui

UpdateCommand -> ItemStorage : saveData()
activate ItemStorage #bcf7cf
ItemStorage --> UpdateCommand
deactivate ItemStorage

UpdateCommand --> SuperTracker
deactivate UpdateCommand
@enduml